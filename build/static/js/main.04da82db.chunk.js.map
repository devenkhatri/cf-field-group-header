{"version":3,"sources":["index.tsx"],"names":["App","props","parameter","sdk","parameters","instance","extendedField","field","onSchemaErrorsChanged","setInvalid","locale","locales","default","contentType","fields","find","id","fieldEditorInterface","editor","editorInterface","controls","fieldId","console","log","settings","className","element","style","fontSize","paddingBottom","message","init","window","startAutoResizer","render","document","getElementById"],"mappings":"uIAAA,0DAYMA,EAA0B,SAACC,GAAqB,IAAD,IAC7CC,EAAiBD,EAAME,IAAIC,WAAWC,SAGtCC,EAAiBL,EAAME,IAAII,MAE3BJ,EAAMF,EAAME,IAElBG,EAAcE,sBAAwB,kBAAM,kBAAM,OAClDF,EAAcG,WAAa,kBAAM,MACjCH,EAAcI,OAASP,EAAIQ,QAAQC,QAEdT,EAAIU,YAAYC,OAAOC,MAAK,qBAAGC,KAAgBV,EAAcU,MAAlF,IACMC,EAAoB,UAAGd,EAAIe,OAAOC,uBAAd,iBAAG,EAA4BC,gBAA/B,aAAG,EAAsCL,MACjE,qBAAGM,UAA0Bf,EAAcU,MAK7C,OAFAM,QAAQC,IAAI,QAAZ,OAAqBN,QAArB,IAAqBA,OAArB,EAAqBA,EAAsBO,UAGzC,qBAAKC,UAAU,YAAf,SACE,cAAC,IAAD,CAAgBC,QAAQ,KAAKC,MAAO,CAACC,SAAU,OAAQC,cAAe,QAAtE,SAAgF3B,EAAU4B,aAKhGC,gBAAK,SAAC5B,GACJA,EAAI6B,OAAOC,mBACXC,iBAAO,cAAClC,EAAD,CAAKG,IAAKA,IAA8BgC,SAASC,eAAe,c","file":"static/js/main.04da82db.chunk.js","sourcesContent":["import * as React from 'react';\nimport { render } from 'react-dom';\nimport { init, FieldExtensionSDK } from '@contentful/app-sdk';\nimport '@contentful/forma-36-react-components/dist/styles.css';\nimport './index.css';\nimport { Heading, SectionHeading } from '@contentful/forma-36-react-components';\nimport { FieldAPI } from '@contentful/app-sdk';\n\ninterface AppProps {\n  sdk: FieldExtensionSDK;\n}\n\nconst App: React.FC<AppProps> = (props: AppProps) => {\n  const parameter: any = props.sdk.parameters.instance;\n\n  \n  const extendedField = (props.sdk.field as any) as FieldAPI;\n\n  const sdk = props.sdk;\n\n  extendedField.onSchemaErrorsChanged = () => () => null;\n  extendedField.setInvalid = () => null;\n  extendedField.locale = sdk.locales.default;\n\n  const fieldDetails = sdk.contentType.fields.find(({ id }) => id === extendedField.id);\n  const fieldEditorInterface = sdk.editor.editorInterface?.controls?.find(\n    ({ fieldId }) => fieldId === extendedField.id\n  );\n\n  console.log(\"*****\", fieldEditorInterface?.settings)\n  \n  return (\n    <div className=\"container\">\n      <SectionHeading element=\"h1\" style={{fontSize: \"1rem\", paddingBottom: \"0rem\"}}>{parameter.message}</SectionHeading>\n    </div>\n  );\n};\n\ninit((sdk: FieldExtensionSDK) => {\n  sdk.window.startAutoResizer();\n  render(<App sdk={sdk as FieldExtensionSDK} />, document.getElementById('root'));\n});\n\n/**\n * By default, iframe of the app is fully reloaded on every save of a source file.\n * If you want to use HMR (hot module reload) instead of full reload, uncomment the following lines\n */\n// if (module.hot) {\n//   module.hot.accept();\n// }"],"sourceRoot":""}